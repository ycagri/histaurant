// Mocks generated by Mockito 5.2.0 from annotations
// in historical_restaurants/test/bloc/list_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:historical_restaurants/database/restaurant.dart' as _i4;
import 'package:historical_restaurants/repository/list_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ListRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockListRepository extends _i1.Mock implements _i2.ListRepository {
  @override
  _i3.Future<List<_i4.Restaurant>> getRestaurants() => (super.noSuchMethod(
          Invocation.method(#getRestaurants, []),
          returnValue: Future<List<_i4.Restaurant>>.value(<_i4.Restaurant>[]))
      as _i3.Future<List<_i4.Restaurant>>);
  @override
  void registerSettingsChangeListener(dynamic Function()? listener) =>
      super.noSuchMethod(
          Invocation.method(#registerSettingsChangeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void unregisterSettingsChangeListener(dynamic Function()? listener) =>
      super.noSuchMethod(
          Invocation.method(#unregisterSettingsChangeListener, [listener]),
          returnValueForMissingStub: null);
}
